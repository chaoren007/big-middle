<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.morning.star.retail.stock.dao.StockDAO" >

    <sql id="base_column" >
      id, warehouse_code, warehouse_name, city_id, city_name, store_code, store_name, group_code, group_name,
      sap_product_code, product_code, product_name, goods_code, goods_name, upc_code,
      done_in_stock_num, (done_in_stock_num - pre_stock_num - wait_out_stock_num) as used_stock_num,
      wait_in_stock_num, pre_stock_num, wait_out_stock_num, done_out_stock_num,
      units, product_type, pack_spec_num, pack_spec_units,
      cost_price, tax_cost_price, total_cost, total_tax_cost
    </sql>

    <select id="query" parameterType="com.morning.star.retail.stock.dto.StockQueryDTO" resultType="com.morning.star.retail.stock.dto.StockDTO">
        select
        <include refid="base_column"/>
        from retail_stock
        where group_code = #{groupCode}
        <if test="storeCode != null and storeCode != ''">
            and store_code = #{storeCode}
        </if>
        <if test="storeName != null and storeName != ''">
            and store_name = #{storeName}
        </if>
        <if test="store != null and store != ''">
            and (store_code like '%${store}%' or store_name like '%${store}%')
        </if>
        <if test="storeCodes != null and storeCodes.size() > 0">
            and store_code in
            <foreach collection="storeCodes" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="productCode != null and productCode != ''">
            and product_code = #{productCode}
        </if>
        <if test="productName != null and productName != ''">
            and product_name = #{productName}
        </if>
        <if test="goodsCode != null and goodsCode != ''">
            and container_code = #{goodsCode}
        </if>
        <if test="goodsCodes != null and goodsCodes.size() > 0">
            and goods_code in
            <foreach collection="goodsCodes" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="upcCode != null and upcCode != ''">
            and upc_code = #{upcCode}
        </if>
        <if test="keyWord != null and keyWord != ''">
            and (product_code like '%${keyWord}%' or product_name like '%${keyWord}%' or goods_code like '%${keyWord}%' or upc_code like '%${keyWord}%')
        </if>
        order by create_time desc
    </select>

    <select id="queryForPage" parameterType="com.morning.star.retail.stock.dto.StockQueryDTO" resultType="com.morning.star.retail.stock.dto.StockDTO">
        select
        <include refid="base_column"/>
        from retail_stock
        where group_code = #{groupCode}
        <if test="storeCode != null and storeCode != ''">
            and store_code = #{storeCode}
        </if>
        <if test="warehouseCode != null and warehouseCode != ''">
            and warehouse_code = #{warehouseCode}
        </if>
        <if test="goodsCode != null and goodsCode != ''">
            and goods_code like '%${goodsCode}%'
        </if>
        <if test="goodsName != null and goodsName != ''">
            and goods_name like '%${goodsName}%'
        </if>
        <if test="upcCode != null and upcCode != ''">
            and upc_code like  '%${upcCode}%'
        </if>
        <if test="stockStatus != null">
            <if test="stockStatus == 1">
                and (done_in_stock_num - pre_stock_num - wait_out_stock_num) &gt; 0
            </if>
            <if test="stockStatus == 2">
                and (done_in_stock_num - pre_stock_num - wait_out_stock_num) &lt;= 0
            </if>
            <if test="stockStatus == 3">
                and wait_in_stock_num &gt; 0
            </if>
        </if>
        order by create_time desc
    </select>

    <update id="updateStockNum" parameterType="com.morning.star.retail.stock.entity.StockEntity">
        update retail_stock
        set modify_time = SYSDATE,operator_id = #{operator.operatorId},operator_name = #{operator.operatorName}
        <if test="doneInStockNum != null">
            ,done_in_stock_num = done_in_stock_num + #{doneInStockNum}
        </if>
        <if test="waitInStockNum != null">
            ,wait_in_stock_num = wait_in_stock_num + #{waitInStockNum}
        </if>
        <if test="preStockNum != null">
            ,pre_stock_num = pre_stock_num + #{preStockNum}
        </if>
        <if test="waitOutStockNum != null">
            ,wait_out_stock_num = wait_out_stock_num + #{waitOutStockNum}
        </if>
        <if test="doneOutStockNum != null">
            ,done_out_stock_num = done_out_stock_num + #{doneOutStockNum}
        </if>
        where group_code = #{groupCode} and store_code = #{storeCode} and goods_code = #{goodsCode}
    </update>

    <!-- retail_stock_pre -->
    <select id="queryLastPreStatus" resultType="java.lang.Integer">
      select status from
        (select status from retail_stock_pre where order_code = #{orderCode} order by create_time desc)
      limit 1
    </select>

</mapper>